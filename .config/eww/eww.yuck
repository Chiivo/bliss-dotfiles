;;;Widgets;;;
(defwidget bar []
  (box
    :orientation "h"
    :class "bar"
    (left-group)
    (workspaces)
    (right-group)
  )
)
(defwidget left-group []
  (box
    :orientation "h"
    :halign "start"
    :space-evenly false
    (power-button)
    (current-window)
  )
)
(defwidget workspaces []
  (box
    :orientation "h"
    :halign "center"
    :valign "center"
    :space-evenly true
    (literal
      :content leftwm-tags
    )
  )
)
(defwidget right-group []
  (box
    :class "right-group"
    :orientation "h"
    :halign "end"
    :space-evenly false
    (bluetooth-button)
    (slider-vol)
    (date)
    (time)
  )
)
(defwidget power-button []
  (button
    :class "power-button"
    :orientation "h"
    :onclick "rofi -show drun &"
    :onmiddleclick "shutdown now"
    " "
  )
)
(defwidget current-window []
  (box
    :class "current-window"
    :orientation "h"
    :space-evenly "false"
    getwindow
  )
)
(defwidget bluetooth-button []
  (button
    :class "bluetooth-button"
    :onclick "bluetoothctl disconnect CC:A7:C1:FF:CC:91 & bluetoothctl connect 5C:C6:E9:14:A8:15 &"
    :onrightclick "bluetoothctl disconnect 5C:C6:E9:14:A8:15 & bluetoothctl connect CC:A7:C1:FF:CC:91 &"
    ""
  )
)
(defwidget slider-vol []
  (box 
    :class "slider-vol"
    :orientation "h"
    :space-evenly false
    (button
      :class "label-vol"
      :onclick "amixer -D pulse sset Master toggle"
      :onrightclick "pavucontrol &"
      getvolsym
    )
    (scale
      :min "0"
      :max "101"
      :value getvol
      :onchange "amixer -D pulse sset Master {}%"
    )
  )
)
(defwidget date []
  (box
    :class "date"
    date
  )
)
(defwidget time []
  (box
    :class "time"
    time
  )
)

;;;Variables;;;
(defpoll getwindow
  :interval "10ms"
  "~/.config/eww/scripts/getwindow"
)
(deflisten leftwm-tags
  "leftwm-state -w 0 -t ~/.config/leftwm/themes/current/template.liquid"
)
(defpoll getvolsym
  :interval "10ms"
  "~/.config/eww/scripts/getvolsym"
)
(defpoll getvol
  :interval "10ms"
  "~/.config/eww/scripts/getvol"
)
(defpoll date
  :interval "10ms"
  "date '+%m/%d'"
)
(defpoll time
  :interval "10ms"
  "date '+%H:%M'"
)

;;;Windows;;;
(defwindow bar0
  :monitor 0
  :windowtype "dock"
  :geometry (geometry
    :y "30px"
    :width "1220px"
    :height "30px"
    :anchor "top center"
  )
  :reserve (struts
    :side "top"
    :distance "60px"
  )
  (bar)
)
(defwindow bar1
  :monitor 1
  :windowtype "dock"
  :geometry (geometry
    :y "30px"
    :width "1220px"
    :height "30px"
    :anchor "top center"
  )
  :reserve (struts
    :side "top"
    :distance "60px"
  )
  (bar)
)
